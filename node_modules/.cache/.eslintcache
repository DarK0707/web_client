[{"/home/hasanali/proje/frontend/src/index.js":"1","/home/hasanali/proje/frontend/src/store.js":"2","/home/hasanali/proje/frontend/src/App.js":"3","/home/hasanali/proje/frontend/src/reportWebVitals.js":"4","/home/hasanali/proje/frontend/src/reducers/productReducers.js":"5","/home/hasanali/proje/frontend/src/reducers/userReducers.js":"6","/home/hasanali/proje/frontend/src/reducers/orderReducers.js":"7","/home/hasanali/proje/frontend/src/reducers/cartReducers.js":"8","/home/hasanali/proje/frontend/src/components/Header.js":"9","/home/hasanali/proje/frontend/src/components/Contanct.js":"10","/home/hasanali/proje/frontend/src/components/Footer.js":"11","/home/hasanali/proje/frontend/src/components/Faq.js":"12","/home/hasanali/proje/frontend/src/components/Feedback.js":"13","/home/hasanali/proje/frontend/src/screens/HomeScreen.js":"14","/home/hasanali/proje/frontend/src/screens/ProductScreen.js":"15","/home/hasanali/proje/frontend/src/screens/CartScreen.js":"16","/home/hasanali/proje/frontend/src/screens/LoginScreen.js":"17","/home/hasanali/proje/frontend/src/screens/RegisterScreen.js":"18","/home/hasanali/proje/frontend/src/screens/ProfileScreen.js":"19","/home/hasanali/proje/frontend/src/screens/ShippingScreen.js":"20","/home/hasanali/proje/frontend/src/screens/PaymentScreen.js":"21","/home/hasanali/proje/frontend/src/screens/PlaceOrderScreen.js":"22","/home/hasanali/proje/frontend/src/screens/OrderScreen.js":"23","/home/hasanali/proje/frontend/src/screens/OrderListScreen.js":"24","/home/hasanali/proje/frontend/src/screens/UserListScreen.js":"25","/home/hasanali/proje/frontend/src/screens/UserEditScreen.js":"26","/home/hasanali/proje/frontend/src/screens/ProductListScreen.js":"27","/home/hasanali/proje/frontend/src/screens/ProductEditScreen.js":"28","/home/hasanali/proje/frontend/src/components/SearchBox.js":"29","/home/hasanali/proje/frontend/src/components/Product.js":"30","/home/hasanali/proje/frontend/src/components/Loader.js":"31","/home/hasanali/proje/frontend/src/components/Message.js":"32","/home/hasanali/proje/frontend/src/components/Paginate.js":"33","/home/hasanali/proje/frontend/src/components/Meta.js":"34","/home/hasanali/proje/frontend/src/components/ProductCarousel.js":"35","/home/hasanali/proje/frontend/src/components/Rating.js":"36","/home/hasanali/proje/frontend/src/components/FormContainer.js":"37","/home/hasanali/proje/frontend/src/constants/orderConstants.js":"38","/home/hasanali/proje/frontend/src/constants/cartConstants.js":"39","/home/hasanali/proje/frontend/src/constants/userConstants.js":"40","/home/hasanali/proje/frontend/src/constants/productConstants.js":"41","/home/hasanali/proje/frontend/src/actions/userActions.js":"42","/home/hasanali/proje/frontend/src/actions/productActions.js":"43","/home/hasanali/proje/frontend/src/actions/cartActions.js":"44","/home/hasanali/proje/frontend/src/actions/orderActions.js":"45","/home/hasanali/proje/frontend/src/components/CheckoutSteps.js":"46"},{"size":383,"mtime":1643654398987,"results":"47","hashOfConfig":"48"},{"size":2457,"mtime":1643651371912,"results":"49","hashOfConfig":"48"},{"size":3016,"mtime":1643728735884,"results":"50","hashOfConfig":"48"},{"size":362,"mtime":1643651371912,"results":"51","hashOfConfig":"48"},{"size":4344,"mtime":1643651371912,"results":"52","hashOfConfig":"48"},{"size":3777,"mtime":1643651371912,"results":"53","hashOfConfig":"48"},{"size":3914,"mtime":1643651371912,"results":"54","hashOfConfig":"48"},{"size":1396,"mtime":1643651371912,"results":"55","hashOfConfig":"48"},{"size":2848,"mtime":1643655441634,"results":"56","hashOfConfig":"48"},{"size":3679,"mtime":1643716718219,"results":"57","hashOfConfig":"48"},{"size":2177,"mtime":1643730217101,"results":"58","hashOfConfig":"48"},{"size":1477,"mtime":1643721453115,"results":"59","hashOfConfig":"48"},{"size":815,"mtime":1643733461027,"results":"60","hashOfConfig":"48"},{"size":1909,"mtime":1643655603541,"results":"61","hashOfConfig":"48"},{"size":9428,"mtime":1643651371912,"results":"62","hashOfConfig":"48"},{"size":4237,"mtime":1643651371912,"results":"63","hashOfConfig":"48"},{"size":2436,"mtime":1643661308366,"results":"64","hashOfConfig":"48"},{"size":3367,"mtime":1643651371912,"results":"65","hashOfConfig":"48"},{"size":6343,"mtime":1643651371912,"results":"66","hashOfConfig":"48"},{"size":2677,"mtime":1643651371912,"results":"67","hashOfConfig":"48"},{"size":1913,"mtime":1643651371912,"results":"68","hashOfConfig":"48"},{"size":6125,"mtime":1643653425619,"results":"69","hashOfConfig":"48"},{"size":8834,"mtime":1643651371912,"results":"70","hashOfConfig":"48"},{"size":3169,"mtime":1643651371912,"results":"71","hashOfConfig":"48"},{"size":3289,"mtime":1643651371912,"results":"72","hashOfConfig":"48"},{"size":3559,"mtime":1643651371912,"results":"73","hashOfConfig":"48"},{"size":4768,"mtime":1643651371912,"results":"74","hashOfConfig":"48"},{"size":6801,"mtime":1643651371912,"results":"75","hashOfConfig":"48"},{"size":754,"mtime":1643655398894,"results":"76","hashOfConfig":"48"},{"size":911,"mtime":1643651371912,"results":"77","hashOfConfig":"48"},{"size":361,"mtime":1643655438567,"results":"78","hashOfConfig":"48"},{"size":280,"mtime":1643651371912,"results":"79","hashOfConfig":"48"},{"size":765,"mtime":1643651371912,"results":"80","hashOfConfig":"48"},{"size":457,"mtime":1643655426347,"results":"81","hashOfConfig":"48"},{"size":1231,"mtime":1643654583083,"results":"82","hashOfConfig":"48"},{"size":1848,"mtime":1643655393921,"results":"83","hashOfConfig":"48"},{"size":381,"mtime":1643651371912,"results":"84","hashOfConfig":"48"},{"size":1182,"mtime":1643651371912,"results":"85","hashOfConfig":"48"},{"size":233,"mtime":1643651371912,"results":"86","hashOfConfig":"48"},{"size":1475,"mtime":1643651371912,"results":"87","hashOfConfig":"48"},{"size":1523,"mtime":1643651371912,"results":"88","hashOfConfig":"48"},{"size":6136,"mtime":1643658262245,"results":"89","hashOfConfig":"48"},{"size":5370,"mtime":1643651371912,"results":"90","hashOfConfig":"48"},{"size":1433,"mtime":1643734797422,"results":"91","hashOfConfig":"48"},{"size":5310,"mtime":1643651371912,"results":"92","hashOfConfig":"48"},{"size":1261,"mtime":1643655515124,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"6qnfg6",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/home/hasanali/proje/frontend/src/index.js",[],["197","198"],"/home/hasanali/proje/frontend/src/store.js",[],"/home/hasanali/proje/frontend/src/App.js",[],"/home/hasanali/proje/frontend/src/reportWebVitals.js",[],"/home/hasanali/proje/frontend/src/reducers/productReducers.js",[],"/home/hasanali/proje/frontend/src/reducers/userReducers.js",[],"/home/hasanali/proje/frontend/src/reducers/orderReducers.js",[],"/home/hasanali/proje/frontend/src/reducers/cartReducers.js",[],"/home/hasanali/proje/frontend/src/components/Header.js",[],"/home/hasanali/proje/frontend/src/components/Contanct.js",["199","200"],"import React from \"react\";\nimport axios from \"axios\";\nfunction Contanct() {\n  return (\n    <div className=\"container\">\n      <div id=\"contact_form\" className=\"row\">\n        <div className=\"col-md-12\">\n          <h2>İLETİŞİM</h2>\n          <form\n            role=\"form\"\n            id=\"feedbackForm\"\n            data-toggle=\"validator\"\n            data-disable=\"false\"\n          >\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"name\">\n                Adınız\n              </label>\n              <div className=\"input-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder=\"Adınızı giriniz\"\n                  required\n                />\n                <span className=\"input-group-addon\">\n                  <i className=\"glyphicon glyphicon-unchecked form-control-feedback\" />\n                </span>\n              </div>\n              <span className=\"help-block\" style={{ display: \"none\" }}>\n                Lütfen Adınızı Giriniz\n              </span>\n            </div>\n\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"email\">\n                İletişim sebebi\n              </label>\n              <input type=\"text\" className=\"form-control\" />\n              <span className=\"help-block\" style={{ display: \"none\" }}>\n                Lütfen geçerli bir email adresi giriniz\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"email\">\n                Email addresinizi giriniz\n              </label>\n              <div className=\"input-group\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email adresinizi giriniz\"\n                  required\n                />\n                <span className=\"input-group-addon\">\n                  <i className=\"glyphicon glyphicon-unchecked form-control-feedback\" />\n                </span>\n              </div>\n              <span className=\"help-block\" style={{ display: \"none\" }}>\n                Lütfen gecerli bir email adresi giriniz\n              </span>\n            </div>\n            <div className=\"form-group\">\n              <label className=\"control-label\" htmlFor=\"message\">\n                Message *\n              </label>\n              <div className=\"input-group\">\n                <textarea\n                  rows={5}\n                  cols={30}\n                  className=\"form-control\"\n                  id=\"message\"\n                  name=\"message\"\n                  placeholder=\"Lüffen mesajınızı giriniz\"\n                  required\n                  defaultValue={\"\"}\n                />\n                <span className=\"input-group-addon\">\n                  <i className=\"glyphicon glyphicon-unchecked form-control-feedback\" />\n                </span>\n              </div>\n              <span className=\"help-block\" style={{ display: \"none\" }}>\n                Lüffen mesajınızı giriniz\n              </span>\n            </div>\n\n            <button\n              type=\"submit\"\n              id=\"feedbackSubmit\"\n              className=\"btn btn-primary btn-lg\"\n              data-loading-text=\"Gönderiyor...\"\n              style={{ display: \"block\", marginTop: \"10px\" }}\n            >\n              Gönder\n            </button>\n          </form>\n        </div>\n      </div>\n      <hr />\n    </div>\n  );\n}\n\nexport default Contanct;\n","/home/hasanali/proje/frontend/src/components/Footer.js",["201","202","203"],"import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"text-center text-lg-start bg-light text-muted\">\n      <section className>\n        <div className=\"container text-center text-md-start mt-5\">\n          <div className=\"row mt-3\">\n            <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n              <h6 className=\"text-uppercase fw-bold mb-4\">\n                <i className=\"fas fa-gem me-3\" />\n                ShineSafrly\n              </h6>\n              <p>\n                Kokteyl ve kahve şurupları, meyve püresi ile başladığımız üretim\n                ağında bugün 85 çeşit şurup, 30 çeşit püre ile birlikte toplamda\n                185 çeşit ürün ile devam etmekteyiz. Ürünlerin üretim aşamasında\n                alanında uzman gıda mühendisi ekibimizi AR-GE ekibimizin\n                Türkiye’nin her bölgesinden bar içi görevli arkadaşlardan\n                topladığı bilgilerle buluşturuyoruz. Yenilikçi tarzımız ile iş\n                ortaklarımıza aradıkları her ürünü sunmak ile birlikte özgün\n                ürünlerimiz ile bar içi görevli arkadaşların hayal güçlerini\n                birleştirip alanımızda yepyeni bir dünya sunuyoruz.\n              </p>\n            </div>\n\n            <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\n              <h6 className=\"text-uppercase fw-bold mb-4\">Yardım</h6>\n              <p>\n                <a href=\"/feedback\" className=\"text-reset\">\n                  Geri İade İçin Bilgilendirme\n                </a>\n              </p>\n              <p>\n                <a href=\"/faq\" className=\"text-reset\">\n                  Şıkca sorulan sorular\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div\n        className=\"text-center p-4\"\n        style={{ backgroundColor: \"rgba(0, 0, 0, 0.05)\" }}\n      >\n        © 2021 Copyright:\n        <a className=\"text-reset fw-bold\" href=\"/\">\n          Site Adı\n        </a>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","/home/hasanali/proje/frontend/src/components/Faq.js",[],"/home/hasanali/proje/frontend/src/components/Feedback.js",["204","205","206","207"],"import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\n\nfunction Feedback() {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      const url = \"https://shinesafelyapi.herokuapp.com/api/feedback\";\n      try {\n        const result = await axios.get(url);\n        setData(result.data);\n\n        console.log();\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div>\n      {data.map((item, i) => {\n        return (\n          <div key={i}>\n            <h1>{item.title}</h1>\n            <p>{item.description}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Feedback;\n","/home/hasanali/proje/frontend/src/screens/HomeScreen.js",["208"],"import React, { useEffect } from \"react\";\n// useDispatch - to call an action, useSelector - select part of state\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Pagination, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport Meta from \"../components/Meta\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n  const pageNumber = match.params.pageNumber || 1;\n\n  // dispatch\n  const dispatch = useDispatch();\n\n  // get piece of state - productList\n  const productList = useSelector((state) => state.productList);\n  // parts of reducer\n  const { loading, error, products, page, pages } = productList;\n\n  // call listProducts action\n  useEffect(() => {\n    // FIRE OFF the action\n    dispatch(listProducts(keyword, pageNumber));\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Geri dön\n        </Link>\n      )}\n      <h1> En son ürünler </h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","/home/hasanali/proje/frontend/src/screens/ProductScreen.js",[],"/home/hasanali/proje/frontend/src/screens/CartScreen.js",[],"/home/hasanali/proje/frontend/src/screens/LoginScreen.js",[],"/home/hasanali/proje/frontend/src/screens/RegisterScreen.js",[],"/home/hasanali/proje/frontend/src/screens/ProfileScreen.js",[],"/home/hasanali/proje/frontend/src/screens/ShippingScreen.js",[],"/home/hasanali/proje/frontend/src/screens/PaymentScreen.js",[],"/home/hasanali/proje/frontend/src/screens/PlaceOrderScreen.js",["209","210"],"// Summary of ordered stuff\nimport React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card, ListGroupItem } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    // Funkcia na zarovnanie na 2 desatinne miesta\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    // Calculate prices\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector((state) => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n        }\n        // eslint-disable-next-line\n    }, [history, success])\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Address: </strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\n                            {' '}{cart.shippingAddress.postalCode}, {cart.shippingAddress.country}</p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0\n                                ? <Message>Your cart is empty</Message>\n                                : (<ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                                )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block'\n                                    disabled={cart.cartItems === 0} onClick={placeOrderHandler}>\n                                    Place order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","/home/hasanali/proje/frontend/src/screens/OrderScreen.js",["211"],"// Summary of ordered stuff\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id     // id z URL\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const orderDetails = useSelector((state) => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector((state) => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay // premenovanie navratovych premennych z reducer\n\n    const orderDeliver = useSelector((state) => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n    if (!loading) {\n        // Funkcia na zarovnanie na 2 desatinne miesta\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n\n        // Calculate prices\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\n            (acc, item) => acc + item.price * item.qty, 0))\n    }\n\n    useEffect(() => {\n\n        if(!userInfo){  // ci sme prihlaseny\n            history.push('/login')\n        }\n\n        // Dynamically adding paypal script\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => { setSdkReady(true) }\n            document.body.appendChild(script)\n        }\n\n        if (!order || order._id !== orderId || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [order, orderId, successPay, successDeliver])\n\n    const successPaymentHandler = (paymentResult) => {\n        // CALL PAY ORDER ACTION\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? <Loader />\n        : error ? <Message variant='danger'>{error}</Message>\n            : <>\n                <h1>Order {order._id}</h1>\n                <Row>\n                    <Col md={8}>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Shipping</h2>\n                                <p><strong>Name: </strong>{order.user.name} </p>\n                                <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}> {order.user.email} </a></p>\n                                <p><strong>Address: </strong>\n                                    {order.shippingAddress.address}, {order.shippingAddress.city},\n                            {' '}{order.shippingAddress.postalCode}, {order.shippingAddress.country}</p>\n                                {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    : <Message variant='danger'>Not Delivered</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <h2>Payment Method</h2>\n                                <p><strong>Method: </strong>\n                                    {order.paymentMethod}</p>\n                                {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    : <Message variant='danger'>Not Paid</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <h2>Order Items</h2>\n                                {order.orderItems.length === 0\n                                    ? <Message>Order is empty</Message>\n                                    : (<ListGroup variant='flush'>\n                                        {order.orderItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                        {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                    )}\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Col>\n                    <Col md={4}>\n                        <Card>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Order Summary</h2>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Items</Col>\n                                        <Col>${order.itemsPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Shipping</Col>\n                                        <Col>${order.shippingPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Tax</Col>\n                                        <Col>${order.taxPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Total</Col>\n                                        <Col>${order.totalPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                {!order.isPaid && (\n                                    <ListGroup.Item>\n                                        {loadingPay && <Loader />}\n                                        {!sdkReady ? <Loader /> : (\n                                            <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                                        )}\n                                    </ListGroup.Item>\n                                )}\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button type='button' className='btn btn-block' onClick={deliverHandler}>\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </ListGroup>\n                        </Card>\n                    </Col>\n                </Row>\n            </>\n}\n\nexport default OrderScreen\n","/home/hasanali/proje/frontend/src/screens/OrderListScreen.js",["212"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {  // not admin or not logged in\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo])  // dependency preto aby sa to spustilo este raz po successDelete\n\n    return (\n        <>\n            <h1>Orders</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (<Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>USER</th>\n                                <th>DATE</th>\n                                <th>TOTAL</th>\n                                <th>PAID</th>\n                                <th>DELIVERED</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.user && order.user.name}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ?\n                                        (order.paidAt.substring(0, 10))\n                                        : (<i className='fas fa-times' style={{ color: 'red' }} />)}</td>\n\n                                    <td>{order.isDelivered ?\n                                        (order.deliveredAt.substring(0, 10))\n                                        : (<i className='fas fa-times' style={{ color: 'red' }} />)}\n                                    </td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button variant='light' className='btn-sm'>\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>)}\n        </>\n    )\n}\n\nexport default OrderListScreen\n","/home/hasanali/proje/frontend/src/screens/UserListScreen.js",["213"],"import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {  // not admin or not logged in\n            history.push('/login')\n        }\n    }, [dispatch, history, successDelete, userInfo])  // dependency preto aby sa to spustilo este raz po successDelete\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure')){\n        dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (<Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>EMAIL</th>\n                                <th>ADMIN</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {users.map(user => (\n                                <tr key={user._id}>\n                                    <td>{user._id}</td>\n                                    <td>{user.name}</td>\n                                    <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                    <td>{user.isAdmin ?\n                                        (<i className='fas fa-check' style={{ color: 'green' }} />)\n                                        : (<i className='fas fa-times' style={{ color: 'red' }} />)}</td>\n                                    <td>\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                            <Button variant='light' className='btn-sm'>\n                                                <i className='fas fa-edit'></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>)}\n        </>\n    )\n}\n\nexport default UserListScreen\n","/home/hasanali/proje/frontend/src/screens/UserEditScreen.js",[],"/home/hasanali/proje/frontend/src/screens/ProductListScreen.js",["214"],"import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Pagination } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate,\n        success: successCreate, product: createdProduct } = productCreate\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts('', pageNumber))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])  // dependency preto aby sa to spustilo este raz po successDelete\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            // DELETE PRODUCTS\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        // CREATE PRODUCT\n        dispatch(createProduct())\n    }\n\n    return (\n        <>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus' /> Create Product\n                    </Button>\n                </Col>\n            </Row>\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                    <>\n                    <Table striped bordered hover responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>NAME</th>\n                                <th>PRICE</th>\n                                <th>CATEGORY</th>\n                                <th>BRAND</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map(product => (\n                                <tr key={product._id}>\n                                    <td>{product._id}</td>\n                                    <td>{product.name}</td>\n                                    <td>${product.price}</td>\n                                    <td>{product.category}</td>\n                                    <td>{product.brand}</td>\n                                    <td>\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                            <Button variant='light' className='btn-sm'>\n                                                <i className='fas fa-edit'></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table> \n                    <Paginate pages={pages} page={page} isAdmin={true} />\n                    </>)}\n        </>\n    )\n}\n\nexport default ProductListScreen\n","/home/hasanali/proje/frontend/src/screens/ProductEditScreen.js",[],"/home/hasanali/proje/frontend/src/components/SearchBox.js",[],"/home/hasanali/proje/frontend/src/components/Product.js",[],"/home/hasanali/proje/frontend/src/components/Loader.js",[],"/home/hasanali/proje/frontend/src/components/Message.js",[],"/home/hasanali/proje/frontend/src/components/Paginate.js",[],"/home/hasanali/proje/frontend/src/components/Meta.js",[],"/home/hasanali/proje/frontend/src/components/ProductCarousel.js",[],"/home/hasanali/proje/frontend/src/components/Rating.js",[],"/home/hasanali/proje/frontend/src/components/FormContainer.js",[],"/home/hasanali/proje/frontend/src/constants/orderConstants.js",[],"/home/hasanali/proje/frontend/src/constants/cartConstants.js",[],"/home/hasanali/proje/frontend/src/constants/userConstants.js",[],"/home/hasanali/proje/frontend/src/constants/productConstants.js",[],"/home/hasanali/proje/frontend/src/actions/userActions.js",["215"],"import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Logout action\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    // token\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // pass token\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/users/${id}`, config);\n\n    dispatch({ type: USER_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    // pass token\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n\n    dispatch({ type: USER_UPDATE_SUCCESS });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data, // updated user\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","/home/hasanali/proje/frontend/src/actions/productActions.js",[],"/home/hasanali/proje/frontend/src/actions/cartActions.js",[],"/home/hasanali/proje/frontend/src/actions/orderActions.js",[],"/home/hasanali/proje/frontend/src/components/CheckoutSteps.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":13},{"ruleId":"224","severity":1,"message":"225","line":9,"column":11,"nodeType":"226","endLine":14,"endColumn":12},{"ruleId":"220","severity":1,"message":"227","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":19},{"ruleId":"220","severity":1,"message":"228","line":2,"column":21,"nodeType":"222","messageId":"223","endLine":2,"endColumn":24},{"ruleId":"220","severity":1,"message":"229","line":2,"column":26,"nodeType":"222","messageId":"223","endLine":2,"endColumn":29},{"ruleId":"220","severity":1,"message":"230","line":6,"column":10,"nodeType":"222","messageId":"223","endLine":6,"endColumn":15},{"ruleId":"220","severity":1,"message":"231","line":6,"column":17,"nodeType":"222","messageId":"223","endLine":6,"endColumn":25},{"ruleId":"220","severity":1,"message":"232","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":21},{"ruleId":"220","severity":1,"message":"233","line":7,"column":23,"nodeType":"222","messageId":"223","endLine":7,"endColumn":37},{"ruleId":"220","severity":1,"message":"234","line":4,"column":15,"nodeType":"222","messageId":"223","endLine":4,"endColumn":25},{"ruleId":"220","severity":1,"message":"235","line":2,"column":17,"nodeType":"222","messageId":"223","endLine":2,"endColumn":25},{"ruleId":"220","severity":1,"message":"236","line":3,"column":52,"nodeType":"222","messageId":"223","endLine":3,"endColumn":65},{"ruleId":"237","severity":1,"message":"238","line":72,"column":8,"nodeType":"239","endLine":72,"endColumn":52,"suggestions":"240"},{"ruleId":"220","severity":1,"message":"235","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"235","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"234","line":3,"column":35,"nodeType":"222","messageId":"223","endLine":3,"endColumn":45},{"ruleId":"220","severity":1,"message":"241","line":241,"column":13,"nodeType":"222","messageId":"223","endLine":241,"endColumn":17},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'Pagination' is defined but never used.","'useState' is defined but never used.","'ListGroupItem' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["244"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},"Update the dependencies array to be: [order, orderId, successPay, successDeliver, userInfo, history, dispatch]",{"range":"247","text":"248"},[2680,2724],"[order, orderId, successPay, successDeliver, userInfo, history, dispatch]"]
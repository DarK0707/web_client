{"ast":null,"code":"import _slicedToArray from\"/home/hasanali/proje/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// Payment method screen\nimport React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;// ak nie je zadana adresa treba ju zadat\nif(!shippingAddress){history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();// DISPATCH SAVE PAYMENT METHOD\ndispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');// go to next page\n};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Paypal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["/home/hasanali/proje/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"oJAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAEnC,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CAFmC,GAG3BE,CAAAA,eAH2B,CAGPF,IAHO,CAG3BE,eAH2B,CAKnC;AACA,GAAI,CAACA,eAAL,CAAsB,CAClBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACH,CARkC,cAUOd,QAAQ,CAAC,QAAD,CAVf,wCAU5Be,aAV4B,eAUbC,gBAVa,eAYnC,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACA;AACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACI,IAAR,CAAa,aAAb,EAA+B;AAClC,CALD,CAOA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAEI,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,uBAA/B,CACI,EAAE,CAAC,QADP,CACgB,IAAI,CAAC,eADrB,CACqC,KAAK,CAAC,QAD3C,CACoD,OAAO,KAD3D,CAEI,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAFd,EADJ,EAFJ,GADJ,cAcI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAdJ,GAHJ,GADJ,CAsBH,CA3CD,CA6CA,cAAeb,CAAAA,aAAf","sourcesContent":["// Payment method screen\nimport React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    // ak nie je zadana adresa treba ju zadat\n    if (!shippingAddress) {\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    const dispatch = useDispatch()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        // DISPATCH SAVE PAYMENT METHOD\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')    // go to next page\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check type='radio' label='Paypal or Credit Card'\n                            id='PayPal' name='paymentMethod' value='PayPal' checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\n\n                        {/* <Form.Check type='radio' label='Stripe'\n                            id='Stripe' name='paymentMethod' value='Stripe'\n                            onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check> */}\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>Continue</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}
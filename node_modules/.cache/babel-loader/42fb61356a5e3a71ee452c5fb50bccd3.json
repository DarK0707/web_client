{"ast":null,"code":"// Redux store file\n// to store all reducers and middleware\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  // use reducer\n  productList: productListReducer,\n  // productList is part of state\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/hasanali/proje/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EACwBC,qBADxB,EAC+CC,oBAD/C,EACqEC,oBADrE,EAEIC,oBAFJ,EAE0BC,0BAF1B,EAEsDC,sBAFtD,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EACsBC,mBADtB,EAC2CC,kBAD3C,EAC+DC,wBAD/D,EAEIC,eAFJ,EAEqBC,iBAFrB,EAEwCC,iBAFxC,QAGO,yBAHP;AAIA,SACIC,kBADJ,EACwBC,mBADxB,EAC6CC,eAD7C,EAC8DC,mBAD9D,EACmFC,kBADnF,EAEIC,gBAFJ,QAGO,0BAHP;AAKA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;AAC5B;AACA0B,EAAAA,WAAW,EAAEtB,kBAFe;AAEK;AACjCuB,EAAAA,cAAc,EAAEtB,qBAHY;AAI5BuB,EAAAA,aAAa,EAAEtB,oBAJa;AAK5BuB,EAAAA,aAAa,EAAEtB,oBALa;AAM5BuB,EAAAA,aAAa,EAAEtB,oBANa;AAO5BuB,EAAAA,mBAAmB,EAAEtB,0BAPO;AAQ5BuB,EAAAA,eAAe,EAAEtB,sBARW;AAS5BuB,EAAAA,IAAI,EAAEtB,WATsB;AAU5BuB,EAAAA,SAAS,EAAEtB,gBAViB;AAW5BuB,EAAAA,YAAY,EAAEtB,mBAXc;AAY5BuB,EAAAA,WAAW,EAAEtB,kBAZe;AAa5BuB,EAAAA,iBAAiB,EAAEtB,wBAbS;AAc5BuB,EAAAA,QAAQ,EAAEtB,eAdkB;AAe5BuB,EAAAA,UAAU,EAAEtB,iBAfgB;AAgB5BuB,EAAAA,UAAU,EAAEtB,iBAhBgB;AAiB5BuB,EAAAA,WAAW,EAAEtB,kBAjBe;AAkB5BuB,EAAAA,YAAY,EAAEtB,mBAlBc;AAmB5BuB,EAAAA,QAAQ,EAAEtB,eAnBkB;AAoB5BuB,EAAAA,YAAY,EAAEtB,mBApBc;AAqB5BuB,EAAAA,WAAW,EAAEtB,kBArBe;AAsB5BuB,EAAAA,SAAS,EAAEtB;AAtBiB,CAAD,CAA/B;AAyBA,MAAMuB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GACyB,EADtD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GACyB,IADrD;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD6B,GACyB,EAD5D;AAGA,MAAMK,YAAY,GAAG;AACjBrB,EAAAA,IAAI,EAAE;AACFsB,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,eAAe,EAAEH;AAFf,GADW;AAKjBnB,EAAAA,SAAS,EAAE;AAAEuB,IAAAA,QAAQ,EAAEL;AAAZ;AALM,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG5D,WAAW,CAAC0B,OAAD,EAAU6B,YAAV,EAAwBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["// Redux store file\n// to store all reducers and middleware\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer,\n    productUpdateReducer, productReviewCreateReducer, productTopRatedReducer\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n    userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer,\n    userListReducer, userDeleteReducer, userUpdateReducer\n} from './reducers/userReducers'\nimport {\n    orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer,\n    orderListReducer\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    // use reducer\n    productList: productListReducer, // productList is part of state\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n    ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}
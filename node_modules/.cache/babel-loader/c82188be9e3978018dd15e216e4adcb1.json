{"ast":null,"code":"import _slicedToArray from\"/home/hasanali/proje/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{register}from'../actions/userActions';// login action\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegisterScreen=function RegisterScreen(_ref){var location=_ref.location,history=_ref.history;// Component level state\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;var redirect=location.search?location.search.split('=')[1]:'/';// URL query string\n// redirect when we are sign in\nuseEffect(function(){if(userInfo){history.push(redirect);}},[history,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();// page dont refresh\nif(password!==confirmPassword){setMessage('Passwords do not match');}else{// DISPATCH REGISTER ACTION\ndispatch(register(name,email,password));}};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign Up\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirn password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Register\"}),/*#__PURE__*/_jsx(Row,{className:\"py-3\",children:/*#__PURE__*/_jsxs(Col,{children:[\" Have an Account? \",/*#__PURE__*/_jsx(Link,{to:redirect?\"/login?redirect=\".concat(redirect):'/login',children:\"Login\"})]})})]})]});};export default RegisterScreen;","map":{"version":3,"sources":["/home/hasanali/proje/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'    // login action\n\nconst RegisterScreen = ({ location, history }) => {\n    // Component level state\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { loading, error, userInfo } = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'   // URL query string\n\n    // redirect when we are sign in\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault() // page dont refresh\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            // DISPATCH REGISTER ACTION\n            dispatch(register(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign Up</h1>\n            { message && <Message variant='danger'>{message}</Message>}\n            { error && <Message variant='danger'>{error}</Message>}\n            { loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter name' value={name}\n                        onChange={(e) => setName(e.target.value)} ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter email' value={email}\n                        onChange={(e) => setEmail(e.target.value)} ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter password' value={password}\n                        onChange={(e) => setPassword(e.target.value)} ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Confirn password' value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)} ></Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>Register</Button>\n                <Row className='py-3'>\n                    <Col> Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link></Col>\n                </Row>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n"]},"metadata":{},"sourceType":"module"}